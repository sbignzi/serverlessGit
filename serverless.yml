service: serverlessGit


plugins:
 ## offline use
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local
  
package:
  individually : true

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  # profile: serverlessUser
  # profile: serverlessUser we shoulf put profile in offline use 
  #If we push to git and we do not deploy directly we do not have to have a profile 
  region: us-east-1
  environment:
    stage:  ${self:custom.stage}
    tableName : ${self:custom.tableName.${env:stage}}
    imageUploadBucket: ${self:custom.imageUploadBucket.${env:stage}}
    region: ${self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - s3:*
        - ses:*
      Resource: '*'

functions:
  - ${file(./lambdas/endpoints/imageUpload/image.yml)}
  - ${file(./lambdas/endpoints/playerPoints/player.yml)}

custom:
  # stage: dev
  serverlessIfElse:
    - If: '${{ secrets.stage }}'
      Set:
        stage:  ${{ secrets.stage }}
      ElseSet:
        stage:  ${env:stage}
  stage:  ${env:stage}
  tableName: 
    prod: s-player-points-prod
    dev: s-player-points-dev
  
  imageUploadBucket: 
    prod: s-my-image-upload-bucket-demo-aws-prod
    dev: s-my-image-upload-bucket-demo-aws-dev


  ## offline use
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations

resources:
  - ${file(./resources/s3.yml)}
  - ${file(./resources/dynamodb.yml)}